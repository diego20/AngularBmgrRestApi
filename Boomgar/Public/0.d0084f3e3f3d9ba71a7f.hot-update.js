webpackHotUpdate(0,{16:function(module,exports){eval("function MainController($scope, $log, $location, $state, baseService, $translate) {\r\n\r\n    $scope.send = function () {\r\n        $scope.results = {};\r\n        $scope.parametersArray = [];\r\n        var i = 0,\r\n            arrayCredentialListParameters = Object.keys($scope.credentialListParameters),\r\n            lengthCredentialListParameters = Object.keys($scope.credentialListParameters).length,\r\n            arrayCredentialsIdParameters = Object.keys($scope.credentialsIdParameters),\r\n            lengthCredentialsIdParameters = Object.keys($scope.credentialsIdParameters).length;\r\n\r\n        if($scope.currentCredentialType === 'credentialList'){\r\n            for(i = 0; i < lengthCredentialListParameters; i ++){\r\n                $scope.parametersArray[i] = {\r\n                    'Name': arrayCredentialListParameters[i],\r\n                    'Value':$scope.credentialListParameters[arrayCredentialListParameters[i]]\r\n                };\r\n            }\r\n        }\r\n        else if($scope.currentCredentialType === 'credentialId' || $scope.currentCredentialType === 'credentialPost' || $scope.currentCredentialType === 'credentialDelete'){\r\n            for(i = 0; i < lengthCredentialsIdParameters; i ++){\r\n                $scope.parametersArray[i] = {\r\n                    'Name': arrayCredentialsIdParameters[i],\r\n                    'Value':$scope.credentialsIdParameters[arrayCredentialsIdParameters[i]]\r\n                };\r\n            }\r\n        }\r\n        var headers = {'AuthorizationInformation':$scope.authorizationInformation};\r\n        //https://localhost:44325/api/Credential/\r\n        //https://52.7.15.19/BomgarVaultWebAPI/api/Credential/\r\n        //https://localhost/BomgarVaultWebAPI/api/Credential/\r\n        $scope.url = baseService.setParams($scope.parametersArray, 'http://localhost/BomgarVaultWebAPI/api/Credential/','');\r\n        var successFunction = function(success, headers){\r\n            $scope.results = success;\r\n            $scope.responseHeaders = headers();\r\n            console.log($scope.results);\r\n        };\r\n        var errorFunction = function(error, headers){\r\n            if(error != null){\r\n                $scope.results = error.Message;\r\n                console.error(error);\r\n            }\r\n            $scope.responseHeaders = headers();\r\n        };\r\n        if($scope.currentCredentialType === 'credentialList' || $scope.currentCredentialType === 'credentialId'){\r\n            baseService.getResource($scope.url, headers, successFunction, errorFunction);\r\n        }else if($scope.currentCredentialType === 'credentialPost'){\r\n            baseService.postResource($scope.url, headers, successFunction, errorFunction);\r\n        }else if($scope.currentCredentialType === 'credentialDelete'){\r\n            baseService.deleteResource($scope.url, headers, successFunction, errorFunction);\r\n        }\r\n        $scope.hideResults = false;\r\n    };\r\n\r\n    $scope.clearContent = function(){\r\n        $scope.parameterContentDescription = '';\r\n        $scope.parameterContentExample = '';\r\n        $scope.parameterContentExampleText = '';\r\n        $scope.selectedParameter = '';\r\n        $scope.authorizationInformation = '';\r\n        $scope.securityScheme = '';\r\n\r\n        var i = 0,\r\n            arrayCredentialListParameters = Object.keys($scope.credentialListParameters),\r\n            lengthCredentialListParameters = Object.keys($scope.credentialListParameters).length,\r\n            arrayCredentialsIdParameters = Object.keys($scope.credentialsIdParameters),\r\n            lengthCredentialsIdParameters = Object.keys($scope.credentialsIdParameters).length;\r\n\r\n        if($scope.currentCredentialType === 'credentialList'){\r\n            for(i = 0; i < lengthCredentialListParameters; i ++){\r\n                $scope.credentialListParameters[arrayCredentialListParameters[i]] = '';\r\n            }\r\n        }\r\n        else if($scope.currentCredentialType !== 'credentialList'){\r\n            for(i = 0; i < lengthCredentialsIdParameters; i ++){\r\n                $scope.credentialsIdParameters[arrayCredentialsIdParameters[i]] = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    $scope.changeCredentialType = function(credentialType){\r\n        if(credentialType !== $scope.currentCredentialType){\r\n            $scope.initVariables();\r\n            $scope.currentCredentialType = credentialType;\r\n            $scope.results = {};\r\n            $scope.hideResults = true;\r\n            $scope.selectedParameter = '';\r\n            $scope.parameterContentDescription = '';\r\n            $scope.parameterContentExample = '';\r\n            credentialType === 'credentialPost' ? $scope.headerRestType = 'POST' : credentialType === 'credentialGet' ? $scope.headerRestType = 'GET' : $scope.headerRestType = 'DELETE';\r\n        }\r\n    }\r\n\r\n    $scope.selectParameter = function(parameter){\r\n        $scope.parameterContentDescription = '';\r\n        $scope.parameterContentExample = '';\r\n        $translate(parameter).then(function(translations){\r\n            $scope.selectedParameter = translations;\r\n        });\r\n        if($scope.parameterContentExampleText === ''){\r\n            $translate(\"EXAMPLE_TEXT\").then(function(tranlation){\r\n                $scope.parameterContentExampleText = tranlation;\r\n            })\r\n        }\r\n        if(parameter === 'AUTHORIZATION_INFORMATION'){\r\n            $translate(['AUTHORIZATION_INFORMATION_DESCRIPTION','AUTHORIZATION_INFORMATION_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.AUTHORIZATION_INFORMATION_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.AUTHORIZATION_INFORMATION_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'SECURITY_SCHEME'){\r\n            $translate(['SECURITY_SCHEME_DESCRIPTION','SECURITY_SCHEME_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.SECURITY_SCHEME_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.SECURITY_SCHEME_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'IPV4'){\r\n            $translate(['IPV4_DESCRIPTION','IPV4_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.IPV4_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.IPV4_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'CREDENTIAL_TYPE'){\r\n            $translate(['CREDENTIAL_TYPE_DESCRIPTION','CREDENTIAL_TYPE_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.CREDENTIAL_TYPE_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.CREDENTIAL_TYPE_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'DOMAIN'){\r\n            $translate(['DOMAIN_DESCRIPTION','DOMAIN_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.DOMAIN_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.DOMAIN_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'HOSTNAME'){\r\n            $translate(['HOSTNAME_DESCRIPTION','HOSTNAME_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.HOSTNAME_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.HOSTNAME_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'LOGIN_AUTHORIZATION_METHOD_CONFIGURATION'){\r\n            $translate(['LOGIN_AUTHORIZATION_METHOD_CONFIGURATION_DESCRIPTION','LOGIN_AUTHORIZATION_METHOD_CONFIGURATION_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.LOGIN_AUTHORIZATION_METHOD_CONFIGURATION_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.LOGIN_AUTHORIZATION_METHOD_CONFIGURATION_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'LOGIN_USERNAME'){\r\n            $translate(['LOGIN_USERNAME_DESCRIPTION','LOGIN_USERNAME_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.LOGIN_USERNAME_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.LOGIN_USERNAME_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }else if(parameter === 'CREDENTIAL_ID'){\r\n            $translate(['CREDENTIAL_ID_DESCRIPTION','CREDENTIAL_ID_EXAMPLE']).then(function(translations){\r\n                $scope.parameterContentDescription = translations.CREDENTIAL_ID_DESCRIPTION;\r\n                $scope.parameterContentExample = translations.CREDENTIAL_ID_EXAMPLE;\r\n                $scope.clearSelectedParameterWhenNoInfo();\r\n            });\r\n        }\r\n    }\r\n\r\n    $scope.clearSelectedParameterWhenNoInfo = function(){\r\n        if($scope.parameterContentDescription === '' && $scope.parameterContentExample === ''){\r\n            $scope.selectedParameter = '';\r\n            $scope.parameterContentExampleText = '';\r\n        }else if($scope.parameterContentExample === ''){\r\n            $scope.parameterContentExampleText = '';\r\n        }\r\n    }\r\n\r\n    $scope.initVariables = function(){\r\n        $scope.securityScheme = '';\r\n        $scope.authorizationInformation = '';\r\n\r\n        $scope.credentialListParameters = {};\r\n        $scope.credentialsIdParameters = {};\r\n\r\n        $scope.credentialListParameters.loginUserName = '';\r\n        $scope.credentialListParameters.loginAuthorizationMethodConfiguration = '';\r\n        $scope.credentialListParameters.IPV4 = '';\r\n        $scope.credentialListParameters.credentialType = '';\r\n        $scope.credentialListParameters.domain = '';\r\n        $scope.credentialListParameters.hostname = '';\r\n\r\n        $scope.credentialsIdParameters.loginUserName = '';\r\n        $scope.credentialsIdParameters.loginAuthorizationMethodConfiguration = '';\r\n        $scope.credentialsIdParameters.CredentialId = '';\r\n        $scope.parameterContentExampleText = '';\r\n\r\n        $scope.url = '';\r\n        $scope.results = '';\r\n        $scope.hideResults = true;\r\n    }\r\n\r\n    var init = function () {\r\n        $scope.currentCredentialType = 'credentialList';\r\n        $scope.headerRestType = 'GET';\r\n        $scope.selectedParameter = '';\r\n        $scope.parameterContentDescription = '';\r\n        $scope.parameterContentExample = '';\r\n        $scope.parameterContentExampleText = '';\r\n        $scope.responseHeaders = {};\r\n        $scope.initVariables();\r\n    }\r\n    init();\r\n}\r\n\r\nMainController.$inject = ['$scope', '$log', '$location', '$state', 'baseService', '$translate'];\r\nmodule.exports = MainController;\r\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,")}});
